<!DOCTYPE html>
<html>
<head>
    <title>Tableau de Bord - Machines Virtuelles</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script>
        $(document).ready(function(){
            setInterval(function(){
                $("#tableau").load(location.href + " #tableau");
            }, 30000);
        });
    </script>
</head>
<body>
    <div class="container-fluid">
        <div id="tableau"><br>
            <h1>Tableau de Bord - Machines Virtuelles</h1><br>
            <table class="table table-striped table-hover">
                <thead class="thead-dark">
                    <tr>
                        <th>ID</th>
                        <th>Utilisation CPU (%)</th>
                        <th>Utilisation Mémoire (%)</th>
                        <th>Mémoire Totale (MB)</th>
                        <th>Mémoire Libre (MB)</th>
                        <th>Statistiques Réseau</th>
                        <th>Utilisation Disque (%)</th>
                        <th>Espace Disque Total (GB)</th>
                        <th>Espace Disque Libre (GB)</th>
                    </tr>
                </thead> 
                <tbody>
                    {% for machine in machines_virtuelles %}
                        <tr>
                            <td>{{ machine[0] }}</td>
                            <td>{{ machine[1] }}%</td>
                            <td>{{ machine[2] }}%</td>
                            <td>{{ machine[3] }}</td>
                            <td>{{ machine[4] }}</td>
                            <td>
                                <details>
                                    <summary>Statistiques Réseau</summary>
                                    <pre>{{ machine[5].replace('\\n', '\n') }}</pre>
                                </details>
                            </td>
                            <td>{{ machine[6] }}</td>
                            <td>{{ machine[7] }}</td>
                            <td>{{ machine[8] }}</td>
                        </tr>
                    {% endfor %}
                </tbody>
            </table>
            </div><br>
            <div class="container container-fluid">
            <h1>Graphique - Utilisation CPU</h1><br>
                <canvas id="myChart"></canvas>
            </div><br>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns"></script>
    <script>
    function updateChart() {
        fetch('/api/data')
        .then(response => response.json())
        .then(data => {
            console.log(data);
            data = data.slice(-50);
            var ctx = document.getElementById('myChart').getContext('2d');
            var dataVM1 = data.filter(item => item[0] === 'VM1');
            var dataVM2 = data.filter(item => item[0] === 'VM2');
            new Chart(ctx, {
                type: 'line',
                data: {
                    labels: data.map(item => item[2]),
                    datasets: [{
                        label: 'CPU Usage VM1',
                        data: dataVM1.map(item => item[1]),
                        borderColor: 'rgb(75, 192, 192)',
                        fill: false
                    }, {
                        label: 'CPU Usage VM2',
                        data: dataVM2.map(item => item[1]),
                        borderColor: 'rgb(255, 99, 132)',
                        fill: false
                    }]
                },
                options: {
                scales: {
                    x: {
                        type: 'time',
                        bounds: 'data',
                        time: {
                            unit: 'minute',
                            displayFormats: {
                                minute: 'HH:mm'
                            },
                            tooltipFormat: 'DD/MM/YYYY HH:mm'
                        }
                    },
                    y: {
                        ticks: {
                            // Ajouter le signe "%" à l'axe des y
                            callback: function(value, index, values) {
                                return value + '%';
                            }
                        }
                    }
                }
            }
            });
        });
    }
    updateChart();
    setInterval(updateChart, 60000);
    </script>
</body>
</html>
